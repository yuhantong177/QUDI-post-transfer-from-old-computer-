Metadata-Version: 1.2
Name: PyDAQmx
Version: 1.4.3
Summary: Interface to the National Instruments PyDAQmx driver
Home-page: http://pythonhosted.org/PyDAQmx/
Author: Pierre Cladé
Author-email: pierre.clade@spectro.jussieu.fr
Maintainer: Pierre Cladé
Maintainer-email: pierre.clade@spectro.jussieu.fr
License: This software can be used under one of the following two licenses: (1) The BSD license. (2) Any other license, as long as it is obtained from the original author.
Description: Overview
        ========
        
        This package allows users to use data acquisition hardware from `National 
        Instrument`_ with python. It makes an interface between the NIDAQmx driver 
        and python. It currently works only on Windows.
        
        The package is not an open source driver from NI acquisition hardware. You first need to install the driver provided by NI
        
        Compare to similar package, the PyDAQmx module is a full interface to
        the NIDAQmx ansi C driver. It imports all the functions from the
        driver and also imports all the predefined constants. This provided an
        almost one to one match between C and python code. Examples using
        callback functions are provided.
        
        A more convenient Object oriented interface is provided, where the mecanism 
        of taskHandle in C is replace with a Task object.
        
        **Detailed information** about this package can be found on its `main
        website`_.
        
        
        
        Installation
        ============
        
        You need first to install the NI DAQmx driver which is provided with your 
        data-acquisition hardware. Please verify that you have install together with 
        the driver the C API (which should be the case by default). 
        
        To install PyDAQmx, download the package and run the command:: 
        
          python setup.py install
        
        You can also directly move the PyDAQmx directory to a location
        that Python can import from (directory in which scripts 
        using PyDAQmx are run, etc.)
         
        
        Contact
        =======
        
        Please send bug reports or feedback to `Pierre Cladé`_.
        
        Version history
        ===============
        Main changes:
        
        * 1.4.3 Support for Centos 7
        * 1.4.2 Proper version string
        * 1.4.1 NIDAQmx Base supported on 64bits linux
        * 1.4 Many small improvements
        * 1.3.2 bug fix
        * 1.3.1 With python 3, strings (unicode) can be use as arguments
        * 1.3 PyDAQmx supports both the NIDAQmx and NIDAQmxBase drivers
        * 1.2.5.2 Bug in version 1.2.5 corrected (Task were not working)
        * 1.2.5.1 Add keywords to all the functions (version 1.2.5 is not working with python 3)
        * 1.2.4 NIDAQmx functions of the 2011 et 2012 NIDAQmx are imported properly
        * 1.2.3 DAQmxAddNetworkDevice is now working
        * 1.2.2 The package is working with python 3 using 2to3
        * 1.2.1 Add doc string to the DAQmxFunctions
        * 1.2 Support of callback function
        * 1.1 Add linux support
        
        Version 1.4
        ===========
        
        Improvements are the following : 
        
        * Each error has a specificc subclass
        * Constants can be loaded without the prefix : PyDAQmx.Val_Cfg_Default
        * Throw warnings as warnings
        * Improve unittest. 
        
        Version 2
        =========
        
        A new version of PyDAQmx will is in the dev2 branch on github. PyDAQmx will follow the pep8 naming convention (and will be called pydaqmx). A legacy mode will still be available. 
        
        .. _National Instrument: http://www.ni.com
        .. _Pierre Cladé: mailto:pierre.clade@spectro.jussieu.fr
        .. _main website: http://pythonhosted.org/PyDAQmx/
        
Keywords: DAQmx,National Instrument,Data Acquisition,nidaq,nidaqmx
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
